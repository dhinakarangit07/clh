name: Backend CI/CD to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: üì§ Copy backend files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "."  # copy entire repo
          target: "/home/${{ secrets.EC2_USERNAME }}/clh-backend"
          rm: true
          strip_components: 0
          debug: true

      - name: üñ•Ô∏è SSH into EC2 to install deps, migrate, run
        uses: appleboy/ssh-action@v1.0.3
        with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USERNAME }}
            key: ${{ secrets.EC2_SSH_KEY }}
            port: 22
            script: |
             sudo apt update -y || sudo yum update -y
             sudo apt install -y python3 python3-venv python3-pip || sudo yum install -y python3 python3-pip
              cd /home/${{ secrets.EC2_USERNAME }}/clh-backend

               # Create venv if not exists
                 if [ ! -d "venv" ]; then
                python3 -m venv venv
                fi
                source venv/bin/activate

               # Ensure pip and install packages
               python -m pip install --upgrade pip
               pip install -r requirements.txt

              # Migrate database
               python manage.py migrate

              # Kill old Django dev server if running and start a new one
              pkill -f runserver || true
              nohup python manage.py runserver 0.0.0.0:8000 &

       
