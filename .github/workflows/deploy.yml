name: 🚀 Deploy Django App to EC2 with Gunicorn and Nginx

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🛡️ Set Permissions on EC2 Web Directory
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          sudo mkdir -p /var/www/html
          sudo chown -R $USER:$USER /var/www/html
          sudo chmod -R 755 /var/www/html

    - name: 📤 Upload Project Files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "."
        target: "/var/www/html/clh"

    - name: 🚀 Remote Deploy Setup on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        command_timeout: 15m
        script: |
          cd /var/www/html/clh
          
          # Update and install required packages
          sudo apt update -y
          sudo apt install -y software-properties-common curl build-essential libmysqlclient-dev pkg-config default-libmysqlclient-dev python3.11 python3.11-dev python3.11-venv nginx nodejs npm

          # Node.js 18 setup for PM2
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo npm install -g pm2

          # Setup Python Virtual Environment
          python3.11 -m venv venv
          source venv/bin/activate

          # Install Python dependencies
          pip install --upgrade pip
          pip install -r requirements.txt

          # Django database migrations
          python manage.py migrate

          # Collect static files (optional, if your project uses it)
          python manage.py collectstatic --noinput

          # PM2 - Manage Django (using Gunicorn)
          pm2 delete django-app || true
          pm2 start gunicorn --name django-app --interpreter ./venv/bin/python3.11 -- -w 3 clh.wsgi:application --bind 0.0.0.0:8000
          pm2 save
          pm2 startup systemd -u $USER --hp $HOME

          # Setup NGINX Reverse Proxy
          sudo bash -c "cat > /etc/nginx/sites-available/default" << 'EOF'
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
          }
          EOF

          # Reload NGINX
          sudo nginx -t
          sudo systemctl reload nginx
