name: 🚀 Django EC2 Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🛡️ Set Permissions on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          sudo mkdir -p /var/www/html/clh
          sudo chown -R $USER:$USER /var/www/html
          sudo chmod -R 777 /var/www/html

    - name: 📤 Upload Django Project to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "."
        target: "/var/www/html/clh"

    - name: 🚀 Install & Deploy on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Install dependencies
          sudo apt update -y
          sudo apt install -y python3.11 python3.11-venv python3.11-dev build-essential libmysqlclient-dev mysql-server nginx curl

          # Node for PM2
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo npm install -g pm2

          # Start MySQL
          sudo systemctl start mysql
          sudo systemctl enable mysql

          # Setup MySQL user and db (skip errors if already exists)
          sudo mysql -e "CREATE DATABASE IF NOT EXISTS clh_db CHARACTER SET UTF8;"
          sudo mysql -e "CREATE USER IF NOT EXISTS 'clh_user'@'localhost' IDENTIFIED BY 'clh_password';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON clh_db.* TO 'clh_user'@'localhost';"
          sudo mysql -e "FLUSH PRIVILEGES;"

          # Python virtualenv
          cd /var/www/html/clh
          python3.11 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

          # Update Django settings.py DB section (overwrite if needed)
          sed -i "s/'NAME':.*/'NAME': 'clh_db',/" clh/settings.py
          sed -i "s/'USER':.*/'USER': 'clh_user',/" clh/settings.py
          sed -i "s/'PASSWORD':.*/'PASSWORD': 'clh_password',/" clh/settings.py
          sed -i "s/'HOST':.*/'HOST': 'localhost',/" clh/settings.py
          sed -i "s/'PORT':.*/'PORT': '3306',/" clh/settings.py

          # Django Migrate & Collectstatic
          python manage.py migrate
          python manage.py collectstatic --noinput

          # Run Gunicorn via PM2 (correct command)
          pm2 delete django-app || true
          pm2 start venv/bin/gunicorn --name django-app --bind 0.0.0.0:8000 clh.wsgi:application
          pm2 save
          pm2 startup --silent

          # NGINX config for Django
          sudo bash -c 'cat > /etc/nginx/sites-available/clh <<EOF
          server {
              listen 80;
              server_name _;
              location /static/ {
                  alias /var/www/html/clh/static/;
              }
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
          }
          EOF'

          sudo ln -sf /etc/nginx/sites-available/clh /etc/nginx/sites-enabled/clh
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t
          sudo systemctl restart nginx
